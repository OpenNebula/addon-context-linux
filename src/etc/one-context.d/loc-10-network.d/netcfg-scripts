#!/usr/bin/env bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2021, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

#
# network module implementation
#

is_network_supported()
{
    case "${_OS_ID}" in
        fedora|centos|rhel|almalinux|ol|rocky)
            return 0
            ;;
        opensuse*)
            return 0
            ;;
    esac

    return 1
}

configure_network()
{
    gen_resolvconf
    gen_network_configuration
}

stop_network()
{
    service network stop
}

start_network()
{
    service network start
}

reload_network()
{
    service network restart
}

#
# helper functions
#

gen_iface_conf()
{
    cat <<EOT
BOOTPROTO=none
NETMASK="${_MASK}"
IPADDR="${_IP}"
EOT

    if [ -n "$_GATEWAY" ]; then
        if [ "$_CONFIG_PATH" = "/etc/sysconfig/network" ]; then
            echo "default ${_GATEWAY} - ${_DEV} ${_METRIC:+metric ${_METRIC}}" \
                >> "${_CONFIG_PATH}/ifroute-${_DEV}"
        else
            echo "default via ${_GATEWAY} dev ${_DEV} ${_METRIC:+metric ${_METRIC}}" \
                >> "${_CONFIG_PATH}/route-${_DEV}"
        fi
    fi

    if [ -n "$_MTU" ]; then
        echo "MTU=${_MTU}"
    fi
}

gen_dhcp_conf()
{
    echo "BOOTPROTO=dhcp"
}

gen_alias_conf() {
    cat <<EOT
IPADDR${_ALIAS_NUM}="${_IP}"
NETMASK${_ALIAS_NUM}="${_MASK}"
EOT
}

gen_iface6_conf()
{
    if [ "$_CONFIG_PATH" = "/etc/sysconfig/network" ]; then
        echo "IPADDR_6A=${_IP6}/${_IP6_PREFIX_LENGTH:-64}"

        cat <<EOT >> "/etc/sysconfig/network/ifsysctl-${_DEV}"
net.ipv6.conf.\$SYSCTL_IF.autoconf = 0
net.ipv6.conf.\$SYSCTL_IF.accept_ra = 0
EOT
    else
        cat <<EOT
IPV6INIT=yes
IPV6ADDR=${_IP6}/${_IP6_PREFIX_LENGTH:-64}
IPV6_AUTOCONF=no
EOT
    fi

    if [ -n "$_IP6_ULA" ]; then
        if [ "$_CONFIG_PATH" = "/etc/sysconfig/network" ]; then
            echo "IPADDR_6B=${_IP6_ULA}/64"
        else
            _IPV6ADDR_SECONDARIES="${_IPV6ADDR_SECONDARIES} ${_IP6_ULA}/64"
        fi
    fi

    if [ -n "$_GATEWAY6" ]; then
        if [ "$_CONFIG_PATH" = "/etc/sysconfig/network" ]; then
            echo "default ${_GATEWAY6} - ${_DEV}" >> "/etc/sysconfig/network/ifroute-${_DEV}"
        else
            echo "IPV6_DEFAULTGW=${_GATEWAY6}"
        fi
    fi

    if [ -n "${_MTU}" ]; then
        echo "IPV6_MTU=${_MTU}"
    fi
}

gen_dhcp6_conf()
{
    cat <<EOT
IPV6INIT=yes
IPV6_AUTOCONF=no
DHCPV6C=yes
EOT
}

gen_alias6_conf()
{
    if [ "$_CONFIG_PATH" = "/etc/sysconfig/network" ]; then
        echo "IPADDR_A6A${_ALIAS_NUM}=${_IP6}/${_IP6_PREFIX_LENGTH:-64}"
    else
        _IPV6ADDR_SECONDARIES="${_IPV6ADDR_SECONDARIES} ${_IP6}/${_IP6_PREFIX_LENGTH:-64}"
    fi

    if [ -n "$_IP6_ULA" ]; then
        if [ "$_CONFIG_PATH" = "/etc/sysconfig/network" ]; then
            echo "IPADDR_A6B${_ALIAS_NUM}=${_IP6_ULA}/64"
        else
            _IPV6ADDR_SECONDARIES="${_IPV6ADDR_SECONDARIES} ${_IP6_ULA}/64"
        fi
    fi
}

gen_network_configuration()
{
    if [ -d /etc/sysconfig/network-scripts ]; then
        _CONFIG_PATH=/etc/sysconfig/network-scripts
    elif [ -d /etc/sysconfig/network ]; then
        _CONFIG_PATH=/etc/sysconfig/network
    fi

    _CONTEXT_INTERFACES=$(get_context_interfaces)

    for iface in $_CONTEXT_INTERFACES; do
        setup_iface_vars "$iface"

        skip_interface && continue

        # cumulative variable
        _IPV6ADDR_SECONDARIES=''

        {
            rm -f "/etc/sysconfig/network-scripts/route-${_DEV}"
            rm -f "/etc/sysconfig/network/ifroute-${_DEV}"
            rm -f "/etc/sysconfig/network/ifsysctl-${_DEV}"

            cat <<EOT
DEVICE=${_DEV}
NM_CONTROLLED=no
TYPE=Ethernet
EOT
            if [ "$_CONFIG_PATH" = "/etc/sysconfig/network" ]; then
                echo "STARTMODE=auto"
            else
                echo "ONBOOT=yes"
            fi

            if is_true "${_DHCP}" ; then
                gen_dhcp_conf
            elif [ -n "${_IP}" ] ; then
                gen_iface_conf
            fi

            if is_true "${_DHCP6}" ; then
                gen_dhcp6_conf
            elif [ -n "${_IP6}" ] ; then
                gen_iface6_conf
            fi

            _ALIASES=$(get_interface_alias "$iface")
            _ALIAS_NUM=0

            for nic_alias in $_ALIASES; do
                setup_ipadr_vars "$nic_alias"
                setup_ip6adr_vars "$nic_alias"
                setup_alias_vars "$nic_alias"

                if [ -z "${_DETACH}" ]; then
                    if ! is_true "${_EXTERNAL}" ; then
                        [ -n "${_IP}"  ] && gen_alias_conf
                        [ -n "${_IP6}" ] && gen_alias6_conf

                        if [ -n "${_IP}${_IP6}" ]; then
                            _ALIAS_NUM=$((_ALIAS_NUM + 1))
                        fi
                    fi
                fi
            done

            # on Red Hats, we need just a single configuration
            # entry with all additional IPv6 addresses
            if [ -n "${_IPV6ADDR_SECONDARIES}" ]; then
                echo "IPV6ADDR_SECONDARIES='${_IPV6ADDR_SECONDARIES## }'"
            fi
        } > "${_CONFIG_PATH}/ifcfg-${_DEV}"

        # TODO: do we want this here?
        ifup "${_DEV}"

    done
}
